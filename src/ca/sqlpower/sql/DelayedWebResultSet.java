package ca.sqlpower.sql;

import java.sql.*;

public class DelayedWebResultSet extends WebResultSet {
	protected int givenColCount;

	/**
	 * Creates a new <code>DelayedWebResultSet</code>.
	 *
	 * @param cols The number of columns the <code>query</code> will
	 * generate when executed.
	 * @param query An SQL query statement.
	 */
	public DelayedWebResultSet(int cols, String query) {
		this.sqlQuery=query;
		this.givenColCount=cols;
		initMembers(cols);
	}

	/**
	 * Does nothing.  Provided for subclasses that want to use
	 * different constructor signatures.
	 */
	protected DelayedWebResultSet() {
		super();
	}

	/**
	 * Executes the query that was given in the constructor.  After
	 * this method has been called, the DelayedWebResultSet will
	 * behave exactly like a regular WebResultSet.
	 *
	 * @param con A live JDBC connection.
	 * @throws IllegalStateException if the actual number of columns
	 * generated by executing the query doesn't match the number
	 * (<code>cols</code>) given to the constructor.
	 * @throws SQLException if there is a database error (most often
	 * due to a syntax error in the SQL query).
	 */
	public void execute(Connection con) throws IllegalStateException, SQLException {
		try {
			execute(con, true);
		} catch (SQLException e) {
			System.out.println("dwrs caught sqlexception from query: "+sqlQuery);
			throw e;
		}
	}

	/**
	 * Executes the query that was given in the constructor.  After
	 * this method has been called, the DelayedWebResultSet will
	 * behave exactly like a regular WebResultSet.
	 *
	 * @param con A live JDBC connection.
	 * @param closeOldRS If this argument is <code>true</code>, any
	 * previous (and still-open) ResultSet attached to this
	 * DelayedWebResultSet will be closed before binding the new one.
	 * @throws IllegalStateException if the actual number of columns
	 * generated by executing the query doesn't match the number
	 * (<code>cols</code>) given to the constructor.
	 * @throws SQLException if there is a database error (most often
	 * due to a syntax error in the SQL query).
	 */
	protected void execute(Connection con, boolean closeOldRS)
		throws IllegalStateException, SQLException {
		Statement stmt=con.createStatement();
		ResultSet results=stmt.executeQuery(sqlQuery);
		applyResultSet(results, closeOldRS);

		if(rsmd.getColumnCount() != givenColCount) {
			throw new IllegalStateException
				("The SQL query returned "+rsmd.getColumnCount()
				 +" columns, but the number of columns originally specified was "
				 +givenColCount+".");
		}
	}

	/**
	 * Just gives back the column count specified in the constructor.
	 *
	 * @return The number of columns that this DelayedWebResultSet has.
	 */
	public int getColumnCount() {
		return givenColCount;
	}
}
