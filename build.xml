<project name="sqlpower_library" default="dist" basedir=".">

	<!-- $Id$ -->
	<property name="dist.dir" value="dist"/>
	<property name="src" value="java"/>
	<property name="build" value="build"/>
	<property name="build_tmp" value="build_tmp"/>
	<property name="build.compiler" value="modern"/>
	<property name="dist.jar" value="sqlpower_library.jar"/>
	<property name="tests" value="regress"/>
	<property name="reports.dir" value="${dist.dir}/reports"/>
	
	<!--
		Set the format of the findbugs report to html by default
	-->
	<condition property="findbugs.report.format" value="html">
		<not>
			<isset property="findbugs.report.format"/>
		</not>
	</condition>
	
	<!--
		Set the format of the pmd report to html by default
	-->
	<condition property="pmd.report.format" value="html">
		<not>
			<isset property="pmd.report.format"/>
		</not>
	</condition>
	
	<path id="compile.classpath">
		<fileset dir="lib">
			<include name="*.jar"/>
		</fileset>
	</path>
	
	<path id="apt.classpath">
		<pathelement location="${build}"/>
		<fileset dir="lib">
			<include name="*.jar"/>
		</fileset>
	</path>

	<path id="test.classpath">
		<pathelement location="${build}"/>
		<fileset dir="lib">
			<include name="*.jar"/>
		</fileset>
	</path>
	
	<target name="init">
		<tstamp/>
		<mkdir dir="${build}"/>
		<mkdir dir="${build_tmp}"/>
	</target>
	
	<target name="compile" depends="init">
		<javac srcdir="${src}" destdir="${build}" classpathref="compile.classpath" debug="true"/>
		<copy tofile="${build}/ca/sqlpower/sql/default_database_types.ini"
				     file="src/ca/sqlpower/sql/default_database_types.ini"/>
		<copy todir="${build}">
			<fileset dir="${src}">
				<include name="**/*.png"/>
			</fileset>
		</copy>
		<copy todir="${build}/">
			<fileset dir="src">
				<include name="**/messages*.properties"/>
			</fileset>
		</copy>
	</target>
	
	<target name="compile-with-annotations" depends="init">
		<javac srcdir="${src}" destdir="${build}" classpathref="compile.classpath" debug="true"/>
		<apt srcdir="${src}"
			destdir="${build_tmp}"
			classpathref="apt.classpath"
			debug="true"
			compile="true"
			factory="ca.sqlpower.object.annotation.SPAnnotationProcessorFactory"
			preprocessdir="src">
		</apt>
		<delete dir="${build}"/>
		<move todir="${build}">
			<fileset dir="${build_tmp}"/>
		</move>
		<copy tofile="${build}/ca/sqlpower/sql/default_database_types.ini"
				     file="src/ca/sqlpower/sql/default_database_types.ini"/>
		<copy todir="${build}">
			<fileset dir="${src}">
				<include name="**/*.png"/>
			</fileset>
		</copy>
		<copy todir="${build}/">
			<fileset dir="src">
				<include name="**/messages*.properties"/>
			</fileset>
		</copy>
	</target>

	<target name="compile-tests" depends="compile-with-annotations">
		<property name="build.tests" value="${build}/tests"/>
		<mkdir dir="${build.tests}"/>
		<javac srcdir="${tests}" destdir="${build.tests}" classpathref="test.classpath" debug="true"/>
	</target>
	
	<target name="test" depends="compile-tests">
		<property name="reports.junit" value="${reports.dir}/junit"/>
		<mkdir dir="${reports.junit}"/>
		<!-- Output all System.out and System.err messages -->
	   <junit printsummary="on" showoutput="no">
	   	   <sysproperty key="ca.sqlpower.architect.test.dir" value="${build.tests}"/>
	       <classpath>
	       		<path refid="test.classpath"/>
	       		<path path="${build.tests}"/>
	       </classpath>
			<batchtest fork="no" todir="${reports.junit}">
				<fileset dir="${tests}">
				    <include name="**/*Test*.java"/>
				    <!-- Exclude abstract test classes and non-JUnit tests -->
					<exclude name="ca/sqlpower/sqlobject/BaseSQLObjectTestCase.java"/>
					<exclude name="ca/sqlpower/sqlobject/DatabaseConnectedTestCase.java"/>
					<exclude name="ca/sqlpower/sqlobject/TestingSQLObjectListener.java"/>
					<exclude name="ca/sqlpower/object/PersistedSPObjectTest.java"/>
					<exclude name="ca/sqlpower/swingui/table/BaseRendererTest.java"/>
			  		<exclude name="ca/sqlpower/util/CacheTest.java"/>
					<exclude name="ca/sqlpower/util/ZealousURLEncoderTest.java"/>
					<exclude name="ca/sqlpower/util/reservoir/TestingReservoirDataSource.java"/>
				</fileset>
			</batchtest>
	   	   <formatter type="xml"/>
	   </junit>
		<!-- Generate HTML report -->
		<junitreport todir="${reports.junit}">
		  <fileset dir="${reports.junit}">
		    <include name="TEST-*.xml" />
		  </fileset>
		  <report todir="${reports.junit}" />
		</junitreport>
	</target>
	
	<target name="jar" depends="compile-with-annotations, test">
		<mkdir dir="${dist.dir}"/>
		<jar jarfile="${dist.dir}/${dist.jar}" basedir="${build}">
		</jar>
	</target>

	<target name="dist" depends="jar, pmd, pmd-cpd, findbugs, javadoc">
		<!-- just a metatarget that brings the dependencies together -->
	</target>

	<target name="clean">
		<delete dir="${build}"/>
		<delete dir="${build_tmp}"/>
		<!-- Temporary to remove the classes generated by annotation processors.
		    These classes need to be moved to a generated package like Architect in the future. -->
		<delete dir="${src}/ca/sqlpower/object/generated"/>
		<delete dir="${src}/ca/sqlpower/sqlobject/generated"/>
		<delete dir="${src}/ca/sqlpower/enterprise/client/generated"/>
		<delete dir="${src}/ca/sqlpower/testutil/generated"/>
	</target>

	<target name="dist-clean" depends="clean">
		<delete dir="${dist.dir}"/>
	</target>
	
	<target name="javadoc" 
		description="Generate the Javadoc documentation for the SQL Power Library API"
		depends="compile-with-annotations">
		<mkdir dir="${dist.dir}/doc/api"/>
		<javadoc sourcepath="${src}" destdir="${dist.dir}/doc/api"
			packagenames="ca.sqlpower.*"
			maxmemory="100m"
			windowtitle="ca.sqlpower.* SQL Power Library"
			Version="true" Author="true" Use="true"
			Overview="html/overview.html"
			classpathref="test.classpath"
			>
			<packageset dir="${src}" defaultexcludes="yes">
				<include name="ca/sqlpower/**" />
				<exclude name="regress/**"/>
			</packageset>
			<bottom><![CDATA[<i>Copyright &#169; 2003-2008 SQL Power Group Inc. <a href="http://www.sqlpower.ca/">www.sqlpower.ca</a>]]></bottom>
		</javadoc>
	</target>
	
	<target name="javadoc.with.umlgraph" 
		description="Generate the Javadoc documentation for the SQL Power Library API along with UML diagrams generated using UMLGraph"
		depends="compile-with-annotations">
		<mkdir dir="${dist.dir}/doc/api"/>
		<javadoc sourcepath="${src}" destdir="${dist.dir}/doc/api"
			packagenames="ca.sqlpower.*"
			maxmemory="100m"
			windowtitle="ca.sqlpower.* SQL Power Library"
			Version="true" Author="true" Use="true"
			Overview="html/overview.html"
			classpathref="test.classpath"
			>
			<doclet name="gr.spinellis.umlgraph.doclet.UmlGraphDoc"
    		  path="buildlib/UmlGraph.jar">
    	        <param name="-attributes" />
    	        <param name="-operations" />
    	        <param name="-qualify" />
    	        <param name="-types" />
    	        <param name="-visibility" />
    	    </doclet>
			<packageset dir="${src}" defaultexcludes="yes">
				<include name="ca/sqlpower/**" />
				<exclude name="regress/**"/>
			</packageset>
			<bottom><![CDATA[<i>Copyright &#169; 2003-2008 SQL Power Group Inc. <a href="http://www.sqlpower.ca/">www.sqlpower.ca</a>]]></bottom>
		</javadoc>
		
		<apply executable="dot" dest="${dist.dir}/doc" parallel="false">
			<arg value="-Tpng"/>
			<arg value="-o"/>
			<targetfile/>
			<srcfile/>
			<fileset dir="${dist.dir}/doc" includes="*.dot"/>
			<mapper type="glob" from="*.dot" to="*.png"/>
		</apply>
	</target>
	
	<!-- findbugs code checking tool -->
	<property name="findbugs.home" value="ext-tools/findbugs"/>
	<property name="findbugs-ant.jar" value="${findbugs.home}/lib/findbugs-ant.jar"/>
	
	<target name="findbugs"
		description="Runs the FindBugs tool, outputs results to a text file"
		depends="compile-with-annotations">
		<mkdir dir="${reports.dir}"/>
		<taskdef name="findbugs" classname="edu.umd.cs.findbugs.anttask.FindBugsTask"
			classpath="${findbugs-ant.jar}"/>
		<findbugs home="${findbugs.home}"
			output="${findbugs.report.format}"
			outputFile="${reports.dir}/findbugs.${findbugs.report.format}"
			reportLevel="low"
			jvmargs="-Xmx512m">  <!-- FindBugs can use up a lot of memory, so adjust the JVM memory here-->
			<class location="${build}" />
			<sourcePath path="${src}" />
			<!-- Classes needed by our code but that we don't want tested -->
			<systemProperty name="findbugs.maskedfields.locals" value='true'/>
		</findbugs>
	</target>
	
	<property name="pmd.home" value="ext-tools/pmd"/>
	<property name="pmd.jar" value="${pmd.home}/lib/pmd-4.2.3.jar"/>
	
	<target name="pmd"
		description="Runs the PMD code checking tool, saving results to a file."
		>
	 	<mkdir dir="${reports.dir}"/>
		<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask"
			classpath="${pmd.jar}"/>
		<property name="pmd-results" value="${reports.dir}/pmd.${pmd.report.format}"/>
		<pmd shortFilenames="true" targetjdk="1.5">
			<ruleset>basic,imports</ruleset>
			<formatter type="${pmd.report.format}" toFile="${pmd-results}"/>
			<fileset dir="${src}">
				<include name="ca/sqlpower/**/*.java"/>
			</fileset>
		</pmd>
		<echo message="PMD completed, output is in ${pmd-results}."/>
	</target>
	
	<target name="pmd-cpd"
		description="Runs the PMD Copy/Paste Detection tool, and saves results to a file">
	 	<mkdir dir="${reports.dir}"/>
		<taskdef name="cpd" classname="net.sourceforge.pmd.cpd.CPDTask"
			classpath="${pmd.jar}"/>
		<property name="cpd-results" value="${reports.dir}/pmd-cpd.xml"/>
		<cpd encoding="UTF-8" minimumTokenCount="120" format="xml" outputfile="${cpd-results}">
			<fileset dir="${src}">
				<include name="ca/sqlpower/**/*.java"/>
				<exclude name="generated/**.java"/>
			</fileset>
		</cpd>
		<xslt in="${cpd-results}" style="${pmd.home}/etc/xslt/cpdhtml.xslt" out="${reports.dir}/pmd-cpd.html" />
		<echo message="CPD completed, output is in ${reports.dir}/cpd-ant-results.html."/>
	</target>
</project>
